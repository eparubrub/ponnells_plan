{"version":3,"sources":["components/NavBar.jsx","components/Home.jsx","components/About.jsx","components/News.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","class","href","src","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Home","Container","Row","className","Col","xs","sm","Image","circle","Component","About","smOffset","rounded","News","App","react_router_dom","components_NavBar","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aca0a445.chunk.js","sourcesContent":["import React from 'react'\n\nfunction NavBar() {\n    return (\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a class=\"navbar-brand\" href=\"#\"><img src=\"/path/to/image.png\"/></a>\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul class=\"navbar-nav\">\n\n                </ul>\n            </div>\n            <div class=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                <ul class=\"navbar-nav ml-auto\">\n                    <li class=\"nav-item active\">\n                        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"#\">Features</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"#\">Pricing</a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default NavBar;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Jumbotron, Container, Row, Col, Image, Button } from 'react-bootstrap';\n\nimport './Home.css';\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <Container> \n        <Row className=\"show-grid text-center\">\n          <Col xs={12} sm={3} className=\"person-wrapper\">\n            <Image src=\"assets/Chantelle.png\" circle className=\"profile-pic\"/>\n            <h3>Chantelle Patel</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ut mi at leo suscipit venenatis.</p>\n          </Col>\n          <Col xs={12} sm={5} className=\"person-wrapper\">\n            <Image src=\"assets/Ashley.jpg\" circle className=\"profile-pic\"/>\n            <h3>Ashley P. Walker</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ut mi at leo suscipit venenatis.</p>\n          </Col>\n          <Col xs={12} sm={3} className=\"person-wrapper\">\n            <Image src=\"assets/Emmit.png\" circle className=\"profile-pic\"/>\n            <h3>Emmit Parubrub</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ut mi at leo suscipit venenatis.</p>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Container, Col, Image } from 'react-bootstrap';\nimport './About.css';\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div>\n        <Image src=\"assets/dog-people.jpg\" className=\"header-image\" />\n        <Container>\n          <Col xs={12} sm={8} smOffset={2}>\n            <Image src=\"assets/person-1.jpg\" className=\"about-profile-pic\" rounded />\n            <h3>Frank The Tank</h3>\n            <p>That's a crooked tree. We'll send him to Washington. These little son of a guns hide in your brush and you just have to push them out. These trees are so much fun. I get started on them and I have a hard time stopping. How to paint. That's easy. What to paint. That's much harder. Be brave. The man who does the best job is the one who is happy at his job.</p>\n            <p>Anyone can paint. You can do anything here. So don't worry about it. Life is too short to be alone, too precious. Share it with a friend. Every highlight needs it's own personal shadow.</p>\n            <p>That's what makes life fun. That you can make these decisions. That you can create the world that you want. Of course he's a happy little stone, cause we don't have any other kind. It's so important to do something every day that will make you happy.</p>\n            <p>You better get your coat out, this is going to be a cold painting. That's the way I look when I get home late; black and blue. That's crazy. We're trying to teach you a technique here and how to use it.</p>\n          </Col>\n        </Container>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport './News.css';\n\nexport default class News extends Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <h2>News</h2>\n        </Container>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport NavBar from './components/NavBar'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport News from './components/News';\nimport Navbar from './components/NavBar';\n\nclass App extends Component {\n    render() {\n      return (\n        <Router>\n        <div>\n          <NavBar/>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/news\" component={News} />\n        </div>\n        </Router>\n      );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}